- title 'Admin bunker'
- content_for :head do
  = stylesheet_link_tag 'admin', :media => 'all'
- content_for :title do
  %h1 Admin bunker
%p
  %h2 Stats
  %ul
    %li= link_to "Users: #{@stats[:user_count]}", admin_data_path('user')
    %li= link_to "Users signed up within last 14 days: #{@stats[:user_count_within_14_days]}", admin_data_path('user')
    %li= link_to "Accounts: #{@stats[:account_count]}", admin_data_path('account')
    %li= link_to "Backlogs: #{@stats[:backlog_count]}", admin_data_path('backlog')
    %li= link_to "Stories: #{@stats[:story_count]}", admin_data_path('story')
    %li= link_to "Pending invites: #{@stats[:pending_invites]}", admin_data_path('invited_user')
    %li= link_to "Beta Signups (deprecated): #{@stats[:beta_signups]}", admin_data_path('beta_signup')
    %li= link_to "A/B Split Tests", vanity_path, { :target => '_blank' }

  %h2 Exports
  %ul
    %li= link_to "All registered users", admin_export_path('all_users'), :target => "_blank"
    %li= link_to "Beta Signups (deprecated)", admin_export_path('beta_signup'), :target => "_blank"
    %li= link_to "Users applied for beta but never signed up, older than 7 days", admin_export_path('not_signed_up_7_days'), :target => "_blank"
    %li= link_to "Users signed up that have not used easyBacklog in 7 days", admin_export_path('not_used_7_days'), :target => "_blank"

  %h2 People currently editing backlogs
  %table.people
    %tr.head
      %th Name
      %th Backlog ID
      %th Editing time

  %h2 Recent cron jobs
  %table.cron-jobs
    %tr.head
      %th Message
      %th Run at
    - @recent_cron_logs.each do |cron|
      %tr
        %td{:title => cron.info}= cron.message
        %td= cron.created_at.strftime('%H:%M %d/%m/%Y')

:javascript
  var adminClientId = 'admin-' + Math.floor(Math.random()*10000).toString(36);
  var adminPoll = function() {
    $.ajax({
      url: 'https://easybacklog-presence.aws.af.cm/admin-monitor',
      data: { id: adminClientId },
      type: 'POST',
      dataType: 'json',
      success: function(response) {
        if (response) {
          var table = $('table.people');
          table.find('tr:not(.head)').remove();
          _(response).each(function(person) {
            var tr = $('<tr>');
            tr.append($('<td>').text(person.name));
            tr.append($('<td>').text(person.channel));
            tr.append($('<td class="time">').text(Math.round(person.since / 1000) + 's'));
            table.append(tr);
          });
        }
        adminPoll();
      },
      error: function() {
        // try again in 5 seconds
        setTimeout(adminPoll, 5000);
      }
    });
  }
  adminPoll();

  setInterval(function() {
    $('td.time').each(function(index, elem) {
      var currentSeconds = Number($(this).text().replace('s',''));
      $(this).text((currentSeconds+1) + 's');
    });
  }, 1000);